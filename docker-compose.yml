
services:
  # PostgreSQL avec authentification corrigée
  db:
    image: pgvector/pgvector:pg15
    environment:
      POSTGRES_DB: news
      POSTGRES_USER: news
      POSTGRES_PASSWORD: news
      # ✅ CORRECTION: Autoriser les connexions depuis les conteneurs Docker
      POSTGRES_HOST_AUTH_METHOD: md5
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    # ✅ CORRECTION: Configuration PostgreSQL pour Docker
    command: >
      postgres
      -c listen_addresses='*'
      -c max_connections=100
      -c shared_buffers=256MB
      -c effective_cache_size=1GB
      -c work_mem=16MB

  # Redis
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  # API
  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    ports:
      - "8000:8000"
    environment:
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      POSTGRES_DB: news
      POSTGRES_USER: news
      POSTGRES_PASSWORD: news
      REDIS_URL: redis://redis:6379
      LOG_LEVEL: INFO
    depends_on:
      - db
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Collector
  collector:
    build:
      context: .
      dockerfile: Dockerfile.api
    environment:
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      POSTGRES_DB: news
      POSTGRES_USER: news
      POSTGRES_PASSWORD: news
      ENABLE_AUTO_COLLECTION: "true"
      COLLECTION_INTERVAL_MINUTES: "30"
      LOG_LEVEL: INFO
    depends_on:
      - db
    restart: unless-stopped
    command: ["python", "/app/run_collector.py"]

  ollama:
    image: ollama/ollama
    container_name: ollama
    ports:
      - "11434:11434"
    gpus: all
    environment:
      - OLLAMA_NUM_CTX=8192
      - OLLAMA_KEEP_ALIVE=30m
      - OLLAMA_MAX_LOADED_MODELS=1
      - OLLAMA_CONTEXT_LENGTH=${OLLAMA_CONTEXT_LENGTH}
    volumes:
      - ollama_data:/root/.ollama
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  ollama_data: